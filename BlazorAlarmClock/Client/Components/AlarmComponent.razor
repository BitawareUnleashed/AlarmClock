@using BlazorAlarmClock.Client.Services;
@using BlazorAlarmClock.Shared.Models;
@using DateTimeComponent.Models;
@inject IJSRuntime JsRuntime
@inject SystemWatch SystemWatch
@inject AlarmServices alarmService

@if (IsSnoozeVisible)
{
    <div class="overlay d-flex align-items-center">
        <MudButton Variant="Variant.Filled" Color="Color.Primary"
               Class="btn btn-primary btn-block btn-lg h-50 w-25"
               OnClick="StopAlarm">Stop</MudButton>

        <MudButton id="buttonId" Class="d-block w-75 h-75" Variant="Variant.Filled" Color="Color.Tertiary"
               OnClick="SnoozeSound">Snooze</MudButton>

    </div>
}

@if (CurrentAlarm is not null)
{
    <MudGrid Class="w-100 mt-5" Style="display: flex; justify-content: center; border-left: solid 1px white;">
        <MudItem xs="1" Style="min-width: 150px">
            <MudTimePicker @ref="picker" Label="Set alarm" @bind-Time="time" PickerVariant="PickerVariant.Dialog">
                <PickerActions>
                    <MudButton Class="mr-auto align-self-start" OnClick="@(() => picker.Clear())">Clear</MudButton>
                    <MudButton OnClick="@(()=>AlarmTimeAccept(false))">Cancel</MudButton>
                    <MudButton Color="Color.Primary" OnClick="@(()=>AlarmTimeAccept(true))">Ok</MudButton>
                </PickerActions>
            </MudTimePicker>
        </MudItem>

        <MudItem xs="1" Class="d-flex justify-center">
            <MudToggleIconButton @bind-Toggled="@CurrentAlarm.IsActive"
                             Icon="@Icons.Material.Filled.AlarmOff" Color="@Color.Error" Title="Off"
                             ToggledIcon="@Icons.Material.Filled.AlarmOn" ToggledColor="@Color.Success" ToggledTitle="On" />
        </MudItem>

        <MudItem xs="8">
            <div class="checkbox-group">
                <MudCheckBox @bind-Checked="@AlarmSunday" Label="Sunday" @onclick="OnSundayClick"></MudCheckBox>
                <MudCheckBox @bind-Checked="@AlarmMonday" Label="Monday" @onclick="OnMondayClick"></MudCheckBox>
                <MudCheckBox @bind-Checked="@AlarmTuesday" Label="Tuesday" @onclick="OnTuesdayClick"></MudCheckBox>
                <MudCheckBox @bind-Checked="@AlarmWednesday" Label="Wednesday" @onclick="OnWednesdayClick"></MudCheckBox>
                <MudCheckBox @bind-Checked="@AlarmThursday" Label="Thursday" @onclick="OnThursdayClick"></MudCheckBox>
                <MudCheckBox @bind-Checked="@AlarmFriday" Label="Friday" @onclick="OnFridayClick"></MudCheckBox>
                <MudCheckBox @bind-Checked="@AlarmSaturday" Label="Saturday" @onclick="OnSaturdayClick"></MudCheckBox>
            </div>
        </MudItem>
        @if (Status == AlarmStatus.SNOOZED)
        {
            <MudItem xs="1">
                <MudButton Class="w-75 h-100" Variant="Variant.Filled" Color="Color.Primary" OnClick="StopAlarm">Stop</MudButton>
            </MudItem>
        }

        @if (IsNewAlarm is not null)
        {
            if (!(bool)IsNewAlarm)
            {
                <MudItem xs="1">
                    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large" OnClick="DeleteAlarm" />
                </MudItem>
            }
        }
        else
        {
            <MudItem xs="1">
                <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large" OnClick="DeleteAlarm" />
            </MudItem>
        }
    </MudGrid>
}

<audio id="myAudio" style="visibility: hidden">
    <source src="@FileName" type="audio/mpeg">
</audio>

