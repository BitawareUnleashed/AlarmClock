@using BlazorAlarmClock.Client.Services;
@using BlazorAlarmClock.Shared.Models;
@using DateTimeComponent.Models;
@inject IJSRuntime JsRuntime
@inject SystemWatch SystemWatch
@inject AlarmServices alarmService

@if (IsSnoozeVisible)
{
    <div class="overlay d-flex align-items-center">
        <MudButton Variant="Variant.Filled" Color="Color.Primary"
               Class="btn btn-primary btn-block btn-lg h-50 w-25"
               OnClick="StopAlarm">Stop</MudButton>

        <MudButton id="buttonId" Class="d-block w-75 h-75" Variant="Variant.Filled" Color="Color.Tertiary"
               OnClick="SnoozeSound">Snooze</MudButton>

    </div>
}

@if (CurrentAlarm is not null)
{
    <MudGrid Class="w-100 mt-5" Style="display: flex; justify-content: center; border-left: solid 1px white;">
        <MudItem xs="1" Style="min-width: 150px; margin-top:-25px">
            <MudTimePicker @ref="picker" Label="Set alarm" @bind-Time="time" PickerVariant="PickerVariant.Dialog" 
                           Style="font-size: 5vh;">
                <PickerActions>
                    <MudButton Class="mr-auto align-self-start" OnClick="@(() => picker.Clear())">Clear</MudButton>
                    <MudButton OnClick="@(() => AlarmTimeAccept(false))">Cancel</MudButton>
                    <MudButton Color="Color.Primary" OnClick="@(() => AlarmTimeAccept(true))">Ok</MudButton>
                </PickerActions>
            </MudTimePicker>
        </MudItem>

        <MudItem xs="1" Class="d-flex justify-content-center" Style="vertical-align: top">
            <MudToggleIconButton @bind-Toggled="@CurrentAlarm.IsActive" Style="height: 50px; width: 50px"
                                 Icon="@Icons.Material.Filled.AlarmOff" Color="@Color.Error" Title="Off"
                                 ToggledIcon="@Icons.Material.Filled.AlarmOn" ToggledColor="@Color.Success" ToggledTitle="On"/>
        </MudItem>

        @if (Status != AlarmStatus.SNOOZED)
        {
            if (IsNewAlarm is not null)
            {
                if ((bool)IsNewAlarm)
                {
                    <MudItem xs="6">
                        <div class="checkbox-group">
                            <MudGrid>
                                <MudItem>
                                    <MudCheckBox @bind-Checked="@AlarmMonday" Label="Mon" @onclick="OnMondayClick"></MudCheckBox>
                                    <MudCheckBox @bind-Checked="@AlarmTuesday" Label="Tue" @onclick="OnTuesdayClick"></MudCheckBox>
                                </MudItem>
                                <MudItem>
                                    <MudCheckBox @bind-Checked="@AlarmWednesday" Label="Wed" @onclick="OnWednesdayClick"></MudCheckBox>
                                    <MudCheckBox @bind-Checked="@AlarmThursday" Label="Thu" @onclick="OnThursdayClick"></MudCheckBox>
                                </MudItem>
                                <MudItem>
                                    <MudCheckBox @bind-Checked="@AlarmFriday" Label="Fri" @onclick="OnFridayClick"></MudCheckBox>
                                    <MudCheckBox @bind-Checked="@AlarmSaturday" Label="Sat" @onclick="OnSaturdayClick"></MudCheckBox>
                                </MudItem>
                                <MudItem>
                                    <MudCheckBox @bind-Checked="@AlarmSunday" Label="Sun" @onclick="OnSundayClick"></MudCheckBox>
                                </MudItem>
                            </MudGrid>
                        </div>
                    </MudItem>
                }
            }
            
            <div class="ml-5" style="width: 120px">
                <MudNumericField T="int" Label="Snooze time" Min="1" Max="30" ValueChanged="SnoozeChanged" Value=CurrentAlarm.SnoozeTime
                                 Adornment="Adornment.End" AdornmentText="@minutesMeasureUnits"/>
            </div>
        }
        else
        {
            <MudItem xs="7">
                Snooze time @CurrentAlarm.SnoozeTime
            </MudItem>
            <MudItem xs="1">
                <MudButton Class="w-75 h-100" Variant="Variant.Filled" Color="Color.Primary" OnClick="StopAlarm">Stop</MudButton>
            </MudItem>
        }

        @if (IsNewAlarm is not null)
        {
            if (!(bool)IsNewAlarm)
            {
                <MudItem xs="1">
                    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large" OnClick="DeleteAlarm"/>
                </MudItem>
            }
        }
        else
        {
            <MudItem xs="1" Class="ml-12">
                <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large" OnClick="DeleteAlarm"/>
            </MudItem>
            <MudItem xs="3" Class="ml-12">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="()=>EditAlarm(CurrentAlarm.Id)">Edit alarm</MudButton>
            </MudItem>
        }
    </MudGrid>
}


@*POPOVER NEW ALARM/EDIT ALARM
<MudPopover Open="@isPopoverEditAlarmVisible" Fixed="true" AnchorOrigin="Origin.CenterCenter" TransformOrigin="Origin.CenterCenter"
            Class="h-20 w-75 border-solid border-2 mud-border-ternary">
    <NewAlarm IsPopoverOpenChanged="CloseEditAlarm" RingtoneFileNameEmpty="Select a ringtone" Alarm="@selectedAlarm" />
</MudPopover>*@

<audio id="myAudio" style="visibility: hidden">
    <source src="@FileName" type="audio/mpeg">
</audio>

